{
    "course_id": "CSC13106",
    "course_name": "Kiến trúc phần mềm",
    "course_start_page": 189,
    "course_end_page": 191,
    "content": "ĐỀ CƯƠNG TÓM TẮT \nCSC13106  - Kiến trúc ph ần mềm \n \n Thông tin chung  \n− Mã học phần  : CSC13106  \n− Tên tiếng Anh: Software Architecture  \n− Khối kiến thức: Tự chọn  - Kiến thức ngành/ chuyên ngành  \n− Số tín chỉ: 4  \n• Lý thuyết  : 45 \n• Thực hành  : 30 \n• Bài tập  : 0 \n− Học phần học trước  :  Phân tích và thiết kế phần mềm   \n Mô tả học phần  \nMôn học cung cấp cho sinh viên về bản chất, ý nghĩa của kiến trúc phần mềm trong việc phát \ntriển phần mềm, cũng như nguyên tắc tổng quan của quy trình thiết kế kiến trúc và các yếu tố \nđánh giá chất lượng kiến trúc phần mềm. Nội dung môn học tập trung giới thiệu một số cách \ntiếp cận tiên tiến trong thiết kế kiến trúc phần mềm, bao gồm: một số kỹ thuật xây dựng tầng \ntrung gian trong kiến trúc phần mềm (Middleware); kiến  trúc phần mềm cho dòng sản phẩm \nphần mềm (ProductLine); kiến trúc phần mềm phát triển theo hướng mô hình (Model -Driven \nArchitecture) và  kiến trúc phần mềm phát triển theo hướng dịch vụ (Service - Oriented \nArchitecture)  \n Mục tiêu của học phần  \nSau khoá học, sinh viên có khả năng:  \n− Tham gia chủ động thảo luận nhóm (theo nhóm lớn của môn học); có khả năng phân \nchia công việc và phối hợp làm việc theo kế hoạch trong nhóm ở quy mô nhỏ (gồm 2 -\n3 sinh viên); ý thức được vai trò và trách nhiệm của thành viên tron g nhóm  \n− Đọc hiểu các tài liệu chuyên ngành và bài giảng/slide/giáo trình bằng tiếng Anh trong \nviệc phân tích và thiết kế kiến trúc phần mềm; giải thích được một số thuật ngữ tiếng \nAnh trong việc phân tích và thiết kế kiến trúc phần mềm; trình bày (dạng báo  cáo viết \ntheo mẫu quy định) và thuyết trình về đề tài của nhóm.   \n 190 − Có tư duy phản biện và cách suy nghĩ toàn diện khi phân tích và thiết kế kiến trúc phần \nmềm  \n− Trình bày và phân tích được ý nghĩa của kiến trúc phần mềm, các nguyên tắc chung \ntrong việc phân tí ch, thiết kế kiến trúc, các tiêu chí và yêu cầu khi thiết kế và đánh giá \nkiến trúc phần mềm  \n− Trình bày và phân tích được một số giải pháp về công nghệ và kiến trúc phần mềm; \nphân tích được ưu điểm và hạn chế của một giải pháp công nghệ và kiến trúc phần mềm  \n− Có khả năng áp dụng một số kiến trúc phần mềm được giới thiệu trong học phần vào \nviệc phát triển phần mềm;  \n− Đề xuất được cải tiến về giải pháp có sẵn về công nghệ và kiến trúc phần mềm cho hệ \nthống phần mềm  \n− Có khả năng tự tìm hiểu, phân tích và đánh giá c ác giải pháp về công nghệ và kiến trúc \nmới \n Nội dung học phần   \n− Tổng quan về kiến trúc phần mềm  \n− Mẫu thiết kế hướng đối tượng (nhóm Creational Pattern)  \n− Mẫu thiết kế hướng đối tượng (nhóm Behavioral Pattern)   \n− Mẫu thiết kế hướng đối tượng (nhóm Structural Patt ern) \n− Middleware (đối tượng phân tán)  \n− Middleware (các phương pháp liên lạc với thông điệp)  \n− Middleware (phân tầng ứng dụng)  \n− Middleware (ánh xạ và kết hợp thông điệp)  \n− Middleware (định nghĩa và thực thi tổng hợp thành phần)  \n− Kiến trúc hướng dịch vụ - Service -Oriented Architecture  \n− Kiến trúc hướng mô hình - Model -Driven Architecture  \n− Kiến trúc triển khai trên Cloud  \n Tài nguyên học phần  \nGiáo trình  \n− Ian Gorton, Essential Software Architecture, 2nd Edition, Springer, 2011  \nTài liệu tham khảo  \n− Len Bass, Paul Clements, Rick Kazman, Software Architecture in Practice, 2  Ed. SEI  \nSeries in Software Engineering, Pearson Education, Inc., Addison -Wesley, 2003.  \n− Jeff Garland, Richard Anthony, Large -Scale Software Architecture : A Practical Guide \nusing UML, Wiley, 2002  \n− Stephen T. Albin, The Art of Software Architecture: Design Methods and Techniques, \nWiley, 2003  \n− Mary Shaw, David Garlan, Software Architecture: Perspectives on an Emerging  \nDiscipline, Prentice Hall, 1996  \n− Hassan Gomaa, Designing Software P roduct Lines with UML : From Use Cases to \nPattern -Based Software Architectures, Addison -Wesley, 2004  \n− Michael Bell, Service -Oriented Modeling (SOA): Service Analysis, Design, and \nArchitecture, Wiley, 2008  \n− IBM Redbooks, Patterns: Service Oriented Architectur e And Web Services, 2004  \n− Sami Beydeda, Model -Driven Software Development, Springer, 2005   \n 191 − Anneke Kleppe, MDA Explained: The Model Driven Architecture --Practice and \nPromise, Addison -Wesley, 2003  \nCông cụ hỗ trợ  \n− Visual Studio .NET  \n− Eclipse/Netbean  \n− Mircosoft SQL  \n− Rational Rose, Visio, StarUML…  "
}