{
    "course_id": "CSC10004",
    "course_name": "Cấu trúc dữ liệu và giải thuật",
    "course_start_page": 81,
    "course_end_page": 82,
    "content": "ĐỀ CƯƠNG TÓM TẮT \nCSC10004  - Cấu trúc d ữ liệu và gi ải thu ật \n \n Thông tin chung  \n− Mã học phần  : CSC10004  \n− Tên tiếng Anh  : Data Structures and Algorithms  \n− Khối kiến thức: Bắt buộc  - Cơ sở ngành  \n− Số tín chỉ: 4  \n• Lý thuyết  : 45 \n• Thực hành  : 30 \n• Bài tập  : 0 \n− Học phần học trước  : Kỹ thuật lập trình   \n Mô tả học phần  \nThis course is one of the foundation courses in Computer Science. This course includes two \nimportant p arts used to create efficient and optimized computer programs: data structure, and \nalgorithm. A data structure defines the way to store and organize data. And, an algorithm is a \nfinite sequence of well -defined steps to solve a particular problem. In the Da ta structures part, \nthis course investigates the properties and operating mechanisms of elementary data structures, \nwhich every programmer should master, including: priority queues, heaps, trees (general trees, \nsearch trees, balanced trees in general or bi nary search trees, AVL trees, AA trees, Red -Black \ntrees, 2 -3 trees, 2 -3-4 trees, B -trees in particular), hash tables, graphs.  \nIn the Algorithms part, sorting algorithms and algorithms together with above mentioned data \nstructures are discussed in detailed.  Students will learn how to analyze algorithms for their \nasymptotic behavior in terms of time complexity using Big -O notation. The space requirements \nfor some algorithms will be considered as well. Through this course, students use C++ to write \nprograms th at embody these data structures and algorithms.  \n Mục tiêu của học phần  \nSau khoá học, sinh viên có khả năng:  \n− Explain the fundamental data structures and algorithms  \n− Use Big -O notation to analyze the algorithm efficiency   \n 82 − Implement the data structures and algorithms in C++  \n− Discriminate the pros and cons of algorithms and data structures then select a proper \ndata structure and/or algorithm for a particular problem.  \n− Combine learned data structures and algorithms to design a new one for an actual \nrequirement.  \n− Develop the personal and interpersonal skills  \n− Use English in reading, writing, listening and speaking  \n Nội dung học phần   \n− Course introduction  \n− General introduction to data structures and algorithms  \n− Introduction to algorithm analysis  \n− Sorting algorithms:  \n− Selection Sort, Heap Sort  \n− Sorting algorithms: Merge Sort, Quick Sort, Radix Sort  \n− Introduction to trees: general trees, tree representation, tree traversal  \n− Binary trees and other types of binary trees (perfect, complete, full binary tree)  \n− Heaps and Priority que ues \n− Binary search trees  \n− AVL trees  \n− 2-3 trees, 2 -3-4 trees  \n− (Red -Black trees, AA trees)  \n− B-tree \n− Hash tables  \n− Graph structures, graph traversals (BFS and DFS), (minimum) spanning tree  \n− Graph algorithms (topological sorting, shortest paths, …)  \n− Final review  \n Tài ngu yên học phần  \nGiáo trình  \n− Frank M. Carrano, Timothy Henry, Data Abstraction and Problem Solving with C++: \nWalls and Mirrors (Seventh Edition), Pearson, 2016  \n− Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest and Clifford Stein (2001), \nIntroduction to A lgorithms (Third Edition), The MIT Press, 2009  \nTài liệu tham khảo  \n− Steven S. Skiena, The Algorithm Design Manual  (Second Edition), Springer, 2008.  \n− N. Wirth, Algorithms + Data Structures = Programs, Prentice -Hall, 1976  \nCông cụ hỗ trợ  \n− Visual Studio Code, DevC,..  \n− Zoom.  \n− Office 365 (authenticated with student email account).  "
}