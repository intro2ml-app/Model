{
    "course_id": "CSC13117",
    "course_name": "Phát triển game nâng cao",
    "course_start_page": 287,
    "course_end_page": 290,
    "content": "ĐỀ CƯƠNG TÓM TẮT \nCSC13117  - Phát tri ển game nâng cao  \n \n Thông tin chung  \n− Mã học phần  : CSC13117  \n− Tên tiếng Anh  : Advanced Game Development  \n− Khối kiến thức: Tự chọn  - Kiến thức tốt nghiệp  \n− Số tín chỉ: 4  \n• Lý thuyết  : 45 \n• Thực hành  : 30 \n• Bài tập  : 0 \n− Học phần học trước  :  Phát tri ển game  \n Mô tả học phần  \nTrong môn học này, sinh viên được giới thiệu các chủ đề nâng cao và chuyên sâu trong việc \nphát triển game, bao gồm: các mẫu thiết kế và kiến trúc thường dùng trong phát triển game và \nframework game; nguyên tắc xử lý song song trên GPU với vertex shader và pixel shader; các \nthuật toán và giải pháp tạo dựng cảnh 3 chiều với hiệu ứng đồ họa nâng cao (dựa địa hình, \nchiếu sáng, khử răng cưa, đổ bóng, billboard, particle…); các kỹ th uật và công nghệ tương tác \nmới cho game (Kinect, Leap Motion, Myo, kính thực tại ảo…); các giải pháp và thư viện hỗ \ntrợ định nghĩa script và kịch bản trong game; nguyên tắc, công nghệ và kỹ thuật để xây dựng \nthành phần server cho game nhiều người chơi.  \n Mục  tiêu của học phần  \nSau khoá học, sinh viên có khả năng:  \n− Đây là học phần chuyên sâu theo hướng phát triển game. Sau khi hoàn thành học phần, \nsinh viên có khả năng vận dụng các mẫu thiết kế và kiến trúc để phát triển game và \nframework game; sử dụng kỹ thuật lập trình xử lý đồ họa nâng cao trên GPU; áp dụng \nđược các thuật toán và giải pháp để xây dựng và tương tác trong cảnh 3 chiều với các \nhiệu ứng nâng cao trong game; xây dựng tính năng tương tác trong game với các thiết \nbị hiện đại hỗ trợ tương tác tự  nhiên; sử dụng các giải pháp định nghĩa script và kịch \nbản cho game; xây dựng thành phần server để xử lý cho các game nhiều người chơi.  \n Nội dung học phần    \n 288 Chương 1  Các mẫu thiết kế và kiến trúc cho phát triển game  \n1.1 Tính tiến hóa và khả năng mở rộng của  game:  \n- Nhu cầu tiến hóa và mở rộng của game  \n- Framework phát triển game  \n- Một số ví dụ cụ thể về tính tiến hóa của game, họ game và framework phát \ntriển game  \n1.2 Giới thiệu chung về mẫu thiết kế và kiến trúc  \n- Khái niệm về mẫu thiết kế và kiến trúc  \n- Một số nguyên tắc chính của mẫu thiết kế và kiến trúc  \n1.3 Các mẫu thiết kế phục vụ việc tạo lập đối tượng trong game  \n- Giới thiệu một số mẫu thiết kế  \n- Tình huống sử dụng và ý nghĩa thực tế  \n- Ví dụ áp dụng cụ thể  \n1.4 Các mẫu thiết kế phục vụ việc tùy biến xử  lý trong game  \n- Giới thiệu một số mẫu thiết kế  \n- Tình huống sử dụng và ý nghĩa thực tế  \n- Ví dụ áp dụng cụ thể  \n1.5 Các mẫu thiết kế phục vụ việc quản lý cấu trúc đối tượng trong game  \n- Giới thiệu một số mẫu thiết kế  \n- Tình huống sử dụng và ý nghĩa thực tế  \n- Ví dụ áp dụng cụ thể  \nChương 2  Kỹ thuật xử lý đồ họa trên GPU  \n2.1 Nguyên tắc xử lý đồ họa trên GPU  \n- Xử lý song song đa nhân trên GPU  \n- Tập thanh ghi và ngữ nghĩa  \n- Các nguyên tắc chính khi xử lý song song với GPU  \n2.2 Giới thiệu chung về ngôn ngữ lập trình xử lý đồ họa trên GPU  \n- Giới thiệu chung về HLSL và GLSL  \n- Cấu trúc tập tin effect  \n- Kiểu dữ liệu, các khai báo biến và ngữ nghĩa (semantic)  \n- Thao tác trên vector  \n2.3 Vertex Shader  \n- Ý nghĩa của Vertex Shader  \n- Các bước xử lý chính của Vertex Shader  \n- Các thao tác xử lý với thông tin của camera trong Vertex Shader  \n2.4 Pixel Shader  \n- Ý nghĩa của Pixel Shader  \n- Các bước xử lý chính của Pixel Shader  \n- Các kỹ thuật xử lý texture trong pixel shader  \nChương 3  Kỹ thuật đồ họa xây dựng môi trường 3 chiều  \n3.1 Tạo dựng địa hình  \n- Nguyên tắc tạo địa hình từ bản đồ độ cao  \n- Xây dựng lưới tam giác cho địa hình từ bản đồ độ cao  \n- Tô màu địa hình theo độ cao  \n- Lợp texture cho địa hình theo độ cao  \n- Hiệu ứng mặt nước cho địa hình  \n3.2 Xây dựng bầu trời  \n- Kỹ thuật skybox và skydom  \n- Nguyên tắc xử lý khi xây dựng bầu trời  \n- Bổ sung hiệu ứng ánh sáng cho bầu trời   \n 289 3.3 Kỹ thuật chiếu sáng  \n- Chiếu sáng với ánh sáng môi trường  \n- Kỹ thuật chiếu sáng và vector pháp tuyến của bề mặt vật thể  \n- Chiếu sáng với nguồn sáng song song  \n- Chiếu sáng với nguồn sáng điểm  \n- Hiệu ứng với ánh sáng phản xạ từ bề mặt  \n3.4 Kỹ thuật đổ bóng  \n- Kỹ thuật đổ bóng tĩnh  \n- Kỹ thuật đổ bóng động  \n3.5 Kỹ thuật billboard  \n- Nhu cầu sử dụng kỹ thuật billboard  \n- Nguyên tắc hoạt động của kỹ thuật billboard  \n- Hiện thực hóa kỹ thuật  billboard trên GPU  \n3.6 Kỹ thuật particle  \n- Nhu cầu và tình huống sử dụng kỹ thuật particle  \n- Nguyên tác hoạt động của kỹ thuật particle  \n- Hiện thực hóa kỹ thuật particle trên GPU  \n3.7 Hiệu ứng khói, lửa…  \nChương 4  Tương tác trong game  \n4.1 Các tính năng tương tác trong game  \n- Giới thiệu và phân tích các tính năng tương tác trong game  \n4.2 Tương tác tự nhiên với Kinect  \n- Giới thiệu chung và nguyên tắc hoạt động  \n- Thiết lập kết nối với thiết bị  \n- Ghi nhận  dữ liệu và xử lý biến cố  \n4.3 Tương tác tự nhiên với Leap Motion  \n- Giới thiệu chung và nguyên tắc hoạt động  \n- Thiết lập kết nối với thiết bị  \n- Ghi nhận dữ liệu và xử lý biến cố  \n4.4 Tương tác tự nhiên với Myo  \n- Giới thiệu chung và nguyên tắc hoạt động  \n- Thiết lập kết nối với thiết bị  \n- Ghi nhận dữ liệu và xử lý biến cố  \n4.5 Tạo cảnh 3 chiều với kính thực tại ảo  \n- Giới thiệu chung và nguyên tắc hoạt động  \n- Thiết lập kết nối với thiết bị  \n- Tách cảnh 3D thành dạng stereo phù hợp 2 mắt trên kính thực tại ảo  \n4.6 Hiệu ứng vật lý trong game  \nChương 5  Liên kết mạng xã hội và kinh doanh trong game  \n5.1 Liên kết mạng xã hội trong game  \n- Xu hướng thực tế trong phát triển game  \n- Đăng ký sử dụng API của Facebook  \n- Chứng thực người dùng  \n- Cấp quyền truy cập  \n- Khai thác và phân tích thông tin từ Facebook  \n- Thử nghiệm ứng dụng khai thác web API của Facebook  \n5.2 Các mô hình kinh doanh trong game  \n- Các mô hình kinh doanh trong game: ưu điểm và hạn chế  \n- Các giải pháp kỹ thuật để kinh doanh trong game  \n- Các cổng và giải pháp thanh toán trực tuyến   \n 290 Chương 6  Kịch bản và xử lý kịch bản  \n6.1 Kịch bản  \n- Nhu cầu sử dụng kịch bản và tính tiến hóa của game  \n- Các khả năng tùy biến và mở rộng game thông qua kịch bản  \n6.2 Các giải pháp định nghĩa và xử lý kịch bản  \n- Giới thiệu một số g iải pháp và thư viện hỗ trợ định nghĩa kịch bản và xử lý \nkịch bản  \n- Cấu trúc tập tin kịch bản và nguyên tắc liên kết nội dung  \n- Phân tích và xử lý kịch bản  \nChương 7  Phát triển game server và xử lý nhiều người dùng  \n7.1 Kiến trúc game server  \n- Các thành phần  trong game server  \n- Nguyên tắc xử lý và đồng bộ hóa giữa các client và server  \n7.2 Các công nghệ phát triển game server  \n- Giới thiệu một số công nghệ phát triển backend server và khả năng sử dụng \ntrong phát triển game server  \n- Hiện thực hóa một số thành phần chính cho game server với một công nghệ \ncụ thể  \n7.3 Xử lý nhiều người dùng  \n- Đánh giá nhu cầu xử lý của server  \n- Đồng bộ hóa xử lý và truy xuất độc quyền  \n- Cân bằng tải và khả năng mở rộng quy mô xử lý  \n Tài nguyên học phần  \nGiáo trình  \nTài liệu tham khảo  \n− Jason Gregory, Game Engine Architecture, Second Edition, A K Peters/CRC Press, \n2014  \n− Ian Millington, Game Physics Engine Development: How to Build a Robust \nCommercial -Grade Physics Engine for your Game, CRC Press, 2010  \n− Robert Nystrom, Ga me Programming Patterns, Genever Benning, 2014  \n− Paul Varcholik, Real -Time 3D Rendering with DirectX and HLSL: A Practical Guide \nto Graphics Programming, Addison -Wesley, 2014  \n− Frank Luna, Introduction to 3D Game Programming with DirectX 11,  Mercury \nLearning & Information, 2012  \n− Doron Feinstein, HLSL Development Cookbook, Packt Publishing, 2013  \n− Sean James, 3D Graphics with XNA Game Studio 4.0,  Packt Publishing, 2011  \n− Simon Jackson, Unity 3D UI Essentials,  Packt Publishing, 2015  \nCông cụ hỗ trợ  \n− Unity 3D  \n− Visual S tudio.NET  \n− DirectX/OpenGL  \n− Một số game engine khác  "
}